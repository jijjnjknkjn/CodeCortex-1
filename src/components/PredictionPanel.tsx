import React from 'react';
import { Brain, Target, AlertTriangle } from 'lucide-react';

interface PredictionPanelProps {
  symbol: string;
  currentPrice: number;
  predictions: {
    oneDay: { price: number; confidence: number };
    oneWeek: { price: number; confidence: number };
    oneMonth: { price: number; confidence: number };
  };
}

export default function PredictionPanel({ symbol, currentPrice, predictions }: PredictionPanelProps) {
  const calculateChange = (predictedPrice: number) => {
    const change = predictedPrice - currentPrice;
    const changePercent = (change / currentPrice) * 100;
    return { change, changePercent };
  };

  const periods = [
    { key: 'oneDay', label: '1 Day', data: predictions.oneDay },
    { key: 'oneWeek', label: '1 Week', data: predictions.oneWeek },
    { key: 'oneMonth', label: '1 Month', data: predictions.oneMonth }
  ];

  return (
    <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
      <div className="flex items-center mb-6">
        <Brain className="h-5 w-5 text-purple-600 mr-2" />
        <h3 className="text-lg font-semibold text-gray-900">AI Predictions for {symbol}</h3>
      </div>

      <div className="space-y-4">
        {periods.map((period) => {
          const { change, changePercent } = calculateChange(period.data.price);
          const isPositive = change >= 0;

          return (
            <div key={period.key} className="border border-gray-200 rounded-lg p-4">
              <div className="flex justify-between items-center mb-2">
                <div className="flex items-center">
                  <Target className="h-4 w-4 text-blue-500 mr-2" />
                  <span className="font-medium text-gray-700">{period.label}</span>
                </div>
                <div className={`flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                  period.data.confidence >= 70 
                    ? 'bg-green-100 text-green-800'
                    : period.data.confidence >= 50
                    ? 'bg-yellow-100 text-yellow-800'
                    : 'bg-red-100 text-red-800'
                }`}>
                  {period.data.confidence}% confidence
                </div>
              </div>

              <div className="flex justify-between items-end">
                <div>
                  <p className="text-xl font-bold text-gray-900">
                    ${period.data.price.toFixed(2)}
                  </p>
                  <p className={`text-sm font-medium ${
                    isPositive ? 'text-green-600' : 'text-red-600'
                  }`}>
                    {isPositive ? '+' : ''}${Math.abs(change).toFixed(2)} ({isPositive ? '+' : ''}{changePercent.toFixed(2)}%)
                  </p>
                </div>
              </div>
            </div>
          );
        })}
      </div>

      <div className="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
        <div className="flex items-start">
          <AlertTriangle className="h-4 w-4 text-yellow-600 mr-2 mt-0.5" />
          <div className="text-xs text-yellow-800">
            <p className="font-medium mb-1">Disclaimer</p>
            <p>These predictions are generated by AI algorithms and should not be considered as investment advice. Past performance does not guarantee future results. Always do your own research and consider consulting with a financial advisor.</p>
          </div>
        </div>
      </div>
    </div>
  );
}